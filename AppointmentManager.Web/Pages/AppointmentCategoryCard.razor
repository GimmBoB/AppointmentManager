@page "/appointmentcategory"
@page "/appointmentcategory/{Id:guid?}"

@attribute [Authorize(Roles = "admin")]

<CardDisplay>
    <MudCard Style="position: relative" Outlined="true">
        <MudForm Model="@_item" @ref="@_form" Validation="@(new Func<object, string, Task<IEnumerable<string>>>(ValidateAsync))" ValidationDelay="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Category</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField
                    @bind-Value="_item.Name"
                    For="@(() => _item.Name)"
                    Label="Name"
                    HelperText="Enter the name here"
                    Class="mt-3"
                    Required="true"/>                
                <MudTextField
                    @bind-Value="_item.Description"
                    For="@(() => _item.Description)"
                    Label="Description"
                    HelperText="Enter the description here"
                    Class="mt-3"
                    Required="false"/>                
            </MudCardContent>
        </MudForm>
        <MudCardActions>
            <MudButton OnClick="() => Navigation.TryNavigateToReturnUrl()" Disabled="@_showOverlay">Cancel</MudButton>
            <MudButton OnClick="@(async () => await SubmitAsync())" Variant="Variant.Text" Color="Color.Primary" Class="ml-auto" Disabled="@_showOverlay">Save</MudButton>
        </MudCardActions>
        <MudOverlay Visible="@_showOverlay" DarkBackground="true" Absolute="true">
            <MudProgressCircular Color="Color.Secondary" Indeterminate="true"/>
        </MudOverlay>
    </MudCard>
</CardDisplay>